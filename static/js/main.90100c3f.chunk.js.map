{"version":3,"sources":["datatypes/animal.ts","utils/format.js","components/Button.jsx","components/Table.jsx","pages/Home.jsx","components/AnimalForm.jsx","pages/AnimalPage.jsx","Routes.jsx","App.jsx","utils/request.js","index.js"],"names":["Animal","id","peso","data_nascimento","nome","tipo","AnimalPage","content","page_number","page_size","formatLocalDate","date","pattern","dt","Date","dtDateOnly","valueOf","getTimezoneOffset","format","Button","props","className","onClick","children","Table","page","changePage","setReloadFormPage","reloadFormPage","history","useHistory","useEffect","map","item","axios","get","then","response","data","push","delete","Home","useState","reloadPage","setReloadPage","setPage","catch","error","console","log","to","AnimalForm","useForm","mode","register","handleSubmit","errors","formState","setValue","reset","shouldDirty","value","onSubmit","put","finally","post","name","type","for","required","maxLength","selected","placeholder","animalPage","Routes","path","exact","App","BASE_URL","process","defaults","baseURL","headers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90100c3f.chunk.js","sourcesContent":["class Animal  {\n    id: number = 0;\n    peso: number = 0;\n    data_nascimento: string = '';\n    nome: string = '';\n    tipo: string = '';\n};\n\nclass AnimalPage {\n    content?: Animal[];\n    page_number: number = 0;\n    page_size: number = 0;\n};\n\nexport {Animal, AnimalPage}","import { format } from 'date-fns';\n\nexport const formatLocalDate = (date: string, pattern: string) => {\n    const dt = new Date(date);\n    const dtDateOnly = new Date(dt.valueOf() + dt.getTimezoneOffset() * 60 * 1000);\n    return format(dtDateOnly, pattern);\n}","import React from 'react'\nimport axios from 'axios'\n\nconst Button = (props) => {\n    return (\n        <button className={props.className} onClick={props.onClick}>\n            {props.children}\n        </button>\n    )\n}\n\nexport default Button","import axios from 'axios'\nimport React from 'react'\nimport { useEffect, useState } from 'react'\nimport { Animal, AnimalPage } from '../datatypes/animal'\nimport {formatLocalDate} from '../utils/format'\nimport Button from './Button'\nimport { useHistory } from \"react-router-dom\";\n// import Button from '../components/Button'\n\nconst Table = ({className, page, changePage, reloadFormPage, setReloadFormPage}) => {\n    // const reloadFormPage, setReloadFormPage = animalPage;\n    const history = useHistory();\n\n    useEffect(() => {\n        changePage()\n    }, []);\n\n    const clickDelete = (id) => {\n        axios.delete(`/animal/${id}`).then((response) => {\n            changePage();\n        })\n    }\n    \n    const clickGet = (id) => {\n        axios.get(`/animal/${id}`).then((response) => {\n            setReloadFormPage(response.data);\n            history.push(\"new-animal\")\n        })\n    }\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped table-sm table-dark\">\n                <thead>\n                    <tr>\n                        <td>Data de Nascimento</td>\n                        <td>Nome</td>\n                        <td>Tipo</td>\n                        <td>Peso</td>\n                        <td>Alterar</td>\n                        <td>Excluir</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {page.content?.map(item => (\n                        <tr key={item.id}>\n                            <td>{formatLocalDate(item.data_nascimento, 'dd/MM/yyyy')}</td>\n                            <td>{item.nome}</td>\n                            <td>{item.tipo}</td>\n                            <td>{item.peso}</td>\n                            <td><Button className=\"btn-primary btn\" onClick={()=> {clickGet(item.id)}}>Alterar</Button></td>\n                            <td><Button className=\"btn-danger btn\" onClick={()=> {clickDelete(item.id)}}>Excluir</Button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Table from '../components/Table'\nimport { useEffect, useState } from 'react'\nimport { Animal, AnimalPage } from '../datatypes/animal'\nimport axios from 'axios'\n\n\nconst Home = ({reloadFormPage, setReloadFormPage}) => {\n    const [reloadPage, setReloadPage] = useState(false)\n\n    const [page, setPage] = useState(new AnimalPage())\n\n    useEffect(() => {\n        axios.get('/animal/').then((response) => {\n            setPage(response.data);\n        }).catch(error => {\n            console.log(error);\n        })\n    }, [reloadPage])\n\n    function changePage() {\n        setReloadPage(!reloadPage);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row mt-5\">\n                <div className=\"col\">\n                <Link to=\"/new-animal\" className=\"btn-primary btn\">Novo Animal</Link>\n                </div>\n            </div>\n            <div className=\"row mt-4\">\n                <Table className='col-4' reloadFormPage={reloadFormPage} setReloadFormPage={setReloadFormPage} page={page} changePage={changePage}></Table>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from \"react-hook-form\"\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport { Animal } from '../datatypes/animal';\nimport {formatLocalDate} from '../utils/format';\nimport { ErrorMessage } from '@hookform/error-message';\n\nconst AnimalForm = ({ className, reloadFormPage, setReloadFormPage }) => {\n    \n    const { register, handleSubmit, formState: { errors }, setValue, reset} = useForm({ mode: 'onBlur' });\n\n    const history = useHistory();\n    const animal = reloadFormPage;\n\n    const clearFields = () => {\n        setReloadFormPage(new Animal())\n    }\n    const toHome = () => {\n        clearFields();\n        history.push(\"/\");\n    }\n\n    useEffect(() => {\n        // loadFields(reloadFormPage)\n        setValue('id', reloadFormPage.id, { shouldDirty: true })\n        setValue('nome', reloadFormPage.nome, { shouldDirty: true })\n        setValue('tipo', reloadFormPage.tipo, { shouldDirty: true })\n        setValue('peso', reloadFormPage.peso !== 0  ?  reloadFormPage.peso : '', { shouldDirty: true })\n        var value = reloadFormPage.data_nascimento !== \"\" ?  formatLocalDate(reloadFormPage.data_nascimento,'dd/MM/yyyy'): ''\n        setValue('data_nascimento', value, { shouldDirty: true })\n    }, [reloadFormPage])\n\n    const onSubmit = (data) => {\n        let id = data[\"id\"];\n        delete data[\"id\"]\n        \n        if (id !== 0) {\n            axios.put(`/animal/${id}`, data)\n                .then(response => {\n                    console.log(response);\n                    // history.push(\"/\");\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n                .finally(() => {\n                    history.push(\"/\");\n                })\n        }\n        else {\n            axios.post('/animal/', data)\n                .then(response => {\n                    console.log(response);\n                    // history.push(\"/\");\n                })\n                .catch(error => {\n                    console.log(error);\n                }).finally(() => {\n                    history.push(\"/\");\n                })\n        }\n    }\n\n    return (\n        <div className={className}>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"container w-50\" >\n                <ErrorMessage errors={errors} name=\"singleErrorInput\" />\n                <div className=\"jumbotron p-5 bg-dark\">\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col-12 offset-6\">\n                            <div className=\"invisible\">\n                                <input id=\"id\" {...register(\"id\")} type=\"text\" />\n                            </div>\n                            <div className=\"form-group row g-3 align-items-center\">\n                                <label for=\"Nome\" className=\"col-sm-2 mt-4 col-form-label\">Nome</label>\n                                <div className=\"col-auto\">\n                                    <input {...register(\"nome\", { required: true, maxLength: 20 })} type=\"text\" id=\"nome\" className=\"form-control\" aria-describedby=\"Nome\" />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row g-3 align-items-center\">\n                                <div className=\"col-sm-2 col-form-label\">\n                                    <label for=\"Tipo\" className=\"col-sm-2  mt-4 col-form-label\">Tipo</label>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <select id=\"tipo\" {...register(\"tipo\", { required: true })} className=\"form-select\" aria-label=\"Tipo\">\n                                        <option selected></option>\n                                        <option value=\"cachorro\">Cachorro</option>\n                                        <option value=\"gato\">Gato</option>\n                                        <option value=\"papagaio\">Papagaio</option>\n                                        <option value=\"hamster\">hamster</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row g-3 align-items-center\">\n                                <div className=\"col-sm-2 col-form-label\">\n                                    <label for=\"Peso\" className=\"col-form-label\">Peso</label>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <input  {...register(\"peso\", { required: true })} type=\"text\" id=\"peso\" className=\"form-control\" aria-describedby=\"Peso\" />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row g-3 align-items-center\">\n                                <div className=\"col-sm-2 col-form-label\">\n                                    <label for=\"data_nascimento\" className=\"col-form-label\">Data de Nascimento</label>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <input placeholder=\"ex: dd/mm/yyyy\" {...register(\"data_nascimento\", { required: true , pattern:'/^\\d{2}\\/\\d{2}\\/\\d{4}$/'})} type=\"text\" id=\"data_nascimento\" className=\"form-control\" aria-describedby=\"Data\" />\n                                </div>\n                            </div>\n                            \n                            <div className=\"form-group row g-3 align-items-center\">\n                                <div className=\"col-sm-2 col-form-label\">\n                                    {/* <Link to=\"/\" className=\"btn-danger btn form-control\">Cancelar</Link> */}\n                                    <input type=\"button\" className=\"btn-danger btn form-control\" value=\"Cancelar\" onClick={toHome} />\n                                </div>\n                                <div className=\"col-sm-2\">\n                                    <input type=\"submit\" className=\"btn-primary btn form-control\" value=\"Salvar\"/>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\nexport default AnimalForm","import React from 'react'\nimport AnimalForm from '../components/AnimalForm'\nimport { useEffect, useState } from 'react'\n\n\nconst AnimalPage = (animalPage) => {\n    return (\n        <AnimalForm className=\"mt-5\" reloadFormPage={animalPage.reloadFormPage} setReloadFormPage={animalPage.setReloadFormPage} />\n    )\n}\n\nexport default AnimalPage","import React from 'react'\nimport { BrowserRouter, HashRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './pages/Home'\nimport AnimalPage from './pages/AnimalPage'\nimport { Animal } from './datatypes/animal'\nimport { useEffect, useState } from 'react'\n\nconst Routes = () => {\n    const [reloadFormPage, setReloadFormPage] = useState(new Animal());\n\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home reloadFormPage={reloadFormPage} setReloadFormPage={setReloadFormPage} />\n                </Route>\n                <Route path=\"/new-animal\" exact>\n                    <AnimalPage reloadFormPage={reloadFormPage} setReloadFormPage={setReloadFormPage} />\n                </Route>\n            </Switch>\n        </HashRouter>\n\n\n    )\n}\nexport default Routes","import React from 'react'\nimport Routes from './Routes'\nimport { BrowserRouter as Router } from 'react-router-dom'\nconst App = () => {\n    return (\n        <Routes />\n    )\n}\nexport default App","import axios from 'axios'\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_URL ?? 'http://localhost:5000';\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';","import 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './utils/request'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}